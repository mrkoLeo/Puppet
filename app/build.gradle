apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

/**
 * 获取签名文件
 */
def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.mrko.pet"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    /**
     * 签名处理
     */
    signingConfigs {
        config {
            storeFile file(keystoreProperties['ReleaseStoreFile'])
            storePassword keystoreProperties['ReleaseStorePassword']
            keyAlias keystoreProperties['ReleaseKeyAlias']
            keyPassword keystoreProperties['ReleaseKeyPassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "DEBUG_MODE", "true"
            signingConfig signingConfigs.config
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "DEBUG_MODE", "false"
            signingConfig signingConfigs.config
        }
    }


    /**
     * 多风格构建
     */
    flavorDimensions "version"
    productFlavors {
        google {
            dimension = "version"

        }
        huawei {
            dimension = "version"
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    viewBinding {
        enabled = true
    }

    dataBinding {
        enabled = true
    }

    /**
     * 更换打包输出的包名
     */
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.getPackageApplicationProvider().get().outputDirectory = new File(project.rootDir.absolutePath + "/apk")
            variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach { apkData ->
                apkData.outputFileName = ((project.name != "app") ? project.name : rootProject.name) + "_" +
                        variant.flavorName + "_" +
                        variant.buildType.name + "_" +
                        variant.versionName + "_" +
                        releaseTime() +
                        ".apk"
            }
        }
    }

}

dependencies {
    // --------- module ---------
    implementation project(path: ':BaseLib')
    implementation project(path: ':AndroidLib')
    implementation project(path: ':MvpLib')
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    // --------- common ---------
    implementation rootProject.ext.dependencies.kotlin_stdlib_jdk7
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.core_ktx
    implementation rootProject.ext.dependencies.constraintlayout

    // --------- test ---------
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.runner
    androidTestImplementation rootProject.ext.dependencies.espresso_core
}
